{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/phase-4-authorizing-requests-lab/client/src/components/Map/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from \"@material-ui/core\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\nimport useStyles from \"./styles\";\nimport mapStyles from \"./mapStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    setCoordinates,\n    setBounds,\n    coordinates,\n    places,\n    setChildClicked\n  } = _ref;\n  const classes = useStyles();\n  const isDesktop = useMediaQuery(\"(min-width: 600px)\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mapContainer,\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n      },\n      defaultCenter: coordinates,\n      center: coordinates,\n      defaultZoom: 14,\n      margin: [50, 50, 50, 50],\n      options: {\n        disableDefaultUI: true,\n        zoomControl: true,\n        styles: mapStyles\n      },\n      onChange: e => {\n        setCoordinates({\n          lat: e.center.lat,\n          lng: e.center.lng\n        });\n        setBounds({\n          ne: e.marginBounds.ne,\n          sw: e.marginBounds.sw\n        });\n      },\n      onChildClick: e => {\n        setChildClicked(e);\n      },\n      children: places === null || places === void 0 ? void 0 : places.map((place, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.markerContainer,\n        lat: Number(place.latitude),\n        lng: Number(place.longitude),\n        children: !isDesktop ? /*#__PURE__*/_jsxDEV(LocationOnOutlinedIcon, {\n          color: \"primary\",\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.typography,\n            variant: \"subtitle2\",\n            gutterBottom: true,\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"R9dAniB5mzfvorVxr1N507GWEyM=\", false, function () {\n  return [useStyles, useMediaQuery];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/yuyili/Development/phase-4-authorizing-requests-lab/client/src/components/Map/Map.jsx"],"names":["React","GoogleMapReact","Paper","Typography","useMediaQuery","LocationOnOutlinedIcon","useStyles","mapStyles","Map","setCoordinates","setBounds","coordinates","places","setChildClicked","classes","isDesktop","mapContainer","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","disableDefaultUI","zoomControl","styles","e","lat","center","lng","ne","marginBounds","sw","map","place","i","markerContainer","Number","latitude","longitude","paper","typography","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,mBAAjD;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,GAAG,GAAG,QAMN;AAAA;;AAAA,MANO;AACXC,IAAAA,cADW;AAEXC,IAAAA,SAFW;AAGXC,IAAAA,WAHW;AAIXC,IAAAA,MAJW;AAKXC,IAAAA;AALW,GAMP;AACJ,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAMS,SAAS,GAAGX,aAAa,CAAC,oBAAD,CAA/B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEU,OAAO,CAACE,YAAxB;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAnB,OADpB;AAEE,MAAA,aAAa,EAAET,WAFjB;AAGE,MAAA,MAAM,EAAEA,WAHV;AAIE,MAAA,WAAW,EAAE,EAJf;AAKE,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CALV;AAME,MAAA,OAAO,EAAE;AACPU,QAAAA,gBAAgB,EAAE,IADX;AAEPC,QAAAA,WAAW,EAAE,IAFN;AAGPC,QAAAA,MAAM,EAAEhB;AAHD,OANX;AAWE,MAAA,QAAQ,EAAGiB,CAAD,IAAO;AACff,QAAAA,cAAc,CAAC;AAAEgB,UAAAA,GAAG,EAAED,CAAC,CAACE,MAAF,CAASD,GAAhB;AAAqBE,UAAAA,GAAG,EAAEH,CAAC,CAACE,MAAF,CAASC;AAAnC,SAAD,CAAd;AACAjB,QAAAA,SAAS,CAAC;AAAEkB,UAAAA,EAAE,EAAEJ,CAAC,CAACK,YAAF,CAAeD,EAArB;AAAyBE,UAAAA,EAAE,EAAEN,CAAC,CAACK,YAAF,CAAeC;AAA5C,SAAD,CAAT;AACD,OAdH;AAeE,MAAA,YAAY,EAAGN,CAAD,IAAO;AACnBX,QAAAA,eAAe,CAACW,CAAD,CAAf;AACD,OAjBH;AAAA,gBAmBGZ,MAnBH,aAmBGA,MAnBH,uBAmBGA,MAAM,CAAEmB,GAAR,CAAY,CAACC,KAAD,EAAQC,CAAR,kBACX;AAEE,QAAA,SAAS,EAAEnB,OAAO,CAACoB,eAFrB;AAGE,QAAA,GAAG,EAAEC,MAAM,CAACH,KAAK,CAACI,QAAP,CAHb;AAIE,QAAA,GAAG,EAAED,MAAM,CAACH,KAAK,CAACK,SAAP,CAJb;AAAA,kBAMG,CAACtB,SAAD,gBACC,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,SAA9B;AAAwC,UAAA,QAAQ,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,KAAD;AAAO,UAAA,SAAS,EAAE,CAAlB;AAAqB,UAAA,SAAS,EAAED,OAAO,CAACwB,KAAxC;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,SAAS,EAAExB,OAAO,CAACyB,UADrB;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,YAAY,MAHd;AAAA,sBAKGP,KAAK,CAACQ;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATJ,SACOP,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AAnBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAxDD;;GAAMzB,G;UAOYF,S,EACEF,a;;;KARdI,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { Paper, Typography, useMediaQuery } from \"@material-ui/core\";\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\n\nimport useStyles from \"./styles\";\nimport mapStyles from \"./mapStyles\";\n\nconst Map = ({\n  setCoordinates,\n  setBounds,\n  coordinates,\n  places,\n  setChildClicked,\n}) => {\n  const classes = useStyles();\n  const isDesktop = useMediaQuery(\"(min-width: 600px)\");\n\n  return (\n    <div className={classes.mapContainer}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n        defaultCenter={coordinates}\n        center={coordinates}\n        defaultZoom={14}\n        margin={[50, 50, 50, 50]}\n        options={{\n          disableDefaultUI: true,\n          zoomControl: true,\n          styles: mapStyles,\n        }}\n        onChange={(e) => {\n          setCoordinates({ lat: e.center.lat, lng: e.center.lng });\n          setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\n        }}\n        onChildClick={(e) => {\n          setChildClicked(e);\n        }}\n      >\n        {places?.map((place, i) => (\n          <div\n            key={i}\n            className={classes.markerContainer}\n            lat={Number(place.latitude)}\n            lng={Number(place.longitude)}\n          >\n            {!isDesktop ? (\n              <LocationOnOutlinedIcon color=\"primary\" fontSize=\"large\" />\n            ) : (\n              <Paper elevation={3} className={classes.paper}>\n                <Typography\n                  className={classes.typography}\n                  variant=\"subtitle2\"\n                  gutterBottom\n                >\n                  {place.name}\n                </Typography>\n              </Paper>\n            )}\n          </div>\n        ))}\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}