{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/travel-app-explor/client/src/components/PlacesList/PlacesContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport PlacesCard from \"./PlacesCard\";\nimport { Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlacesContainer = _ref => {\n  _s();\n\n  let {\n    savedPlaces,\n    setSavedPlaces\n  } = _ref;\n  useEffect(() => {\n    fetch(\"/places\").then(res => {\n      if (res.ok) {\n        res.json().then(data => setSavedPlaces(data));\n      } else {\n        res.json().then(errors => console.log(errors));\n      }\n    });\n  }, []);\n  const mapSavedPlaces = savedPlaces.map(myPlace => {\n    return /*#__PURE__*/_jsxDEV(PlacesCard, {\n      id: myPlace.id,\n      name: myPlace.name,\n      location: myPlace.location,\n      image: myPlace.image\n    }, myPlace.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    container: true,\n    noValidate: true,\n    sx: {\n      mt: 3\n    },\n    style: {\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      children: \"My Places\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: mapSavedPlaces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlacesContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PlacesContainer;\nexport default PlacesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesContainer\");","map":{"version":3,"sources":["/Users/yuyili/Development/travel-app-explor/client/src/components/PlacesList/PlacesContainer.jsx"],"names":["useEffect","PlacesCard","Box","Typography","Button","Card","CardMedia","CardContent","CardActions","Chip","Grid","PlacesContainer","savedPlaces","setSavedPlaces","fetch","then","res","ok","json","data","errors","console","log","mapSavedPlaces","map","myPlace","id","name","location","image","mt","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACEC,GADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,IARF,EASEC,IATF,QAUO,mBAVP;;;AAYA,MAAMC,eAAe,GAAG,QAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAoC;AAC3Db,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,SAAD,CAAL,CAAiBC,IAAjB,CAAuBC,GAAD,IAAS;AAC7B,UAAIA,GAAG,CAACC,EAAR,EAAY;AACVD,QAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAUN,cAAc,CAACM,IAAD,CAAxC;AACD,OAFD,MAEO;AACLH,QAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBK,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAA5B;AACD;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMG,cAAc,GAAGX,WAAW,CAACY,GAAZ,CAAiBC,OAAD,IAAa;AAClD,wBACE,QAAC,UAAD;AAEE,MAAA,EAAE,EAAEA,OAAO,CAACC,EAFd;AAGE,MAAA,IAAI,EAAED,OAAO,CAACE,IAHhB;AAIE,MAAA,QAAQ,EAAEF,OAAO,CAACG,QAJpB;AAKE,MAAA,KAAK,EAAEH,OAAO,CAACI;AALjB,OACOJ,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVsB,CAAvB;AAYA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,EAAE,EAAE;AAAEI,MAAAA,EAAE,EAAE;AAAN,KAHN;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAJT;AAAA,4BAME,QAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,gBAAiBR;AAAjB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CApCD;;GAAMZ,e;;KAAAA,e;AAsCN,eAAeA,eAAf","sourcesContent":["import { useEffect } from \"react\";\nimport PlacesCard from \"./PlacesCard\";\nimport {\n  Box,\n  Typography,\n  Button,\n  Card,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Chip,\n  Grid,\n} from \"@material-ui/core\";\n\nconst PlacesContainer = ({ savedPlaces, setSavedPlaces }) => {\n  useEffect(() => {\n    fetch(\"/places\").then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setSavedPlaces(data));\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n  }, []);\n\n  const mapSavedPlaces = savedPlaces.map((myPlace) => {\n    return (\n      <PlacesCard\n        key={myPlace.id}\n        id={myPlace.id}\n        name={myPlace.name}\n        location={myPlace.location}\n        image={myPlace.image}\n      />\n    );\n  });\n\n  return (\n    <Box\n      container\n      noValidate\n      sx={{ mt: 3 }}\n      style={{ justifyContent: \"center\" }}\n    >\n      <Typography gutterBottom variant=\"h5\">\n        My Places\n      </Typography>\n      <Grid container>{mapSavedPlaces}</Grid>\n    </Box>\n  );\n};\n\nexport default PlacesContainer;\n"]},"metadata":{},"sourceType":"module"}