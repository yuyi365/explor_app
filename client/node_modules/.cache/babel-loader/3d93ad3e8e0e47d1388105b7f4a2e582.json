{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/travel-app-explor/client/src/components/Landing/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    setUser\n  } = _ref;\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n\n  const checkEmail = () => {\n    if (String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid(emailValid => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch(passwordMatch => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name: firstname,\n        last_name: lastname,\n        email,\n        username,\n        password\n      };\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(newUser => {\n            console.log(newUser);\n            alert(`You have sucessfully signed up with email ${newUser.email}. Log in and make em count!`);\n          });\n        } else {\n          res.json().then(errors => console.log(errors));\n        }\n      });\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPasswordRepeat(\"\");\n      e.target.reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      sx: {\n        backgroundImage: \"url(https://source.unsplash.com/random)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: t => t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 8,\n          mx: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: \"primary.main\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                autoComplete: \"given-name\",\n                name: \"firstname\",\n                id: \"firstname\",\n                label: \"First name\",\n                autoFocus: true,\n                value: firstname,\n                onChange: e => setFirstname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                autoComplete: \"family-name\",\n                id: \"lastName\",\n                label: \"Last Name\",\n                name: \"lastname\",\n                value: lastname,\n                onChange: e => setLastname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: emailValid ? /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                id: \"email\",\n                label: \"Email Address\",\n                name: \"email\",\n                autoComplete: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                error: true,\n                required: true,\n                fullWidth: true,\n                id: \"filled-error-helper-text\",\n                label: \"Email Address\",\n                helperText: \"Must be a valid email containing '@'\",\n                variant: \"filled\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                autoComplete: \"username\",\n                id: \"username\",\n                label: \"Username\",\n                name: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: passwordMatch ? /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"new-password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                error: true,\n                required: true,\n                fullWidth: true,\n                id: \"filled-error-helper-text\",\n                label: \"Password\",\n                helperText: \"Passwords don't match, please try again\",\n                variant: \"filled\",\n                type: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: passwordMatch ? /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                fullWidth: true,\n                name: \"password-match\",\n                label: \"Type Password Again\",\n                type: \"password\",\n                id: \"password-match\",\n                autoComplete: \"new-password-match\",\n                value: passwordRepeat,\n                onChange: e => setPasswordRepeat(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                error: true,\n                required: true,\n                fullWidth: true,\n                id: \"filled-error-helper-text\",\n                label: \"Type Password Again\",\n                helperText: \"Passwords don't match, please try again\",\n                variant: \"filled\",\n                type: \"password\",\n                value: passwordRepeat,\n                onChange: e => setPasswordRepeat(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\",\n                variant: \"body2\",\n                children: \"Already have an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n            sx: {\n              mt: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"rny82Wr9ZAFqKbnc4I3yf/Z2sy0=\");\n\n_c = SignUp;\n\nconst Copyright = props => {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: [\"Copyright © \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"/\",\n      children: \"Explor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Copyright;\nconst theme = createTheme();\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"Copyright\");","map":{"version":3,"sources":["/Users/yuyili/Development/travel-app-explor/client/src/components/Landing/SignUp.jsx"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","Link","Paper","Box","Grid","LockOutlinedIcon","Typography","createTheme","ThemeProvider","SignUp","setUser","firstname","setFirstname","lastname","setLastname","email","setEmail","username","setUsername","emailValid","setEmailValid","password","setPassword","passwordRepeat","setPasswordRepeat","passwordMatch","setPasswordMatch","checkEmail","String","toLowerCase","match","checkPassword","handleSubmit","e","preventDefault","user","first_name","last_name","fetch","method","headers","body","JSON","stringify","then","res","ok","json","newUser","console","log","alert","errors","target","reset","theme","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","m","bgcolor","mt","value","mb","Copyright","props","Date","getFullYear"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nconst SignUp = ({ setUser }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch((passwordMatch) => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name: firstname,\n        last_name: lastname,\n        email,\n        username,\n        password,\n      };\n\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newUser) => {\n            console.log(newUser);\n            alert(\n              `You have sucessfully signed up with email ${newUser.email}. Log in and make em count!`\n            );\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPasswordRepeat(\"\");\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 1 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  label=\"First name\"\n                  autoFocus\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                {emailValid ? (\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Email Address\"\n                    helperText=\"Must be a valid email containing '@'\"\n                    variant=\"filled\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Password\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password-match\"\n                    label=\"Type Password Again\"\n                    type=\"password\"\n                    id=\"password-match\"\n                    autoComplete=\"new-password-match\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Type Password Again\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ mt: 5 }} />\n          </Box>\n        </Box>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Explor\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}