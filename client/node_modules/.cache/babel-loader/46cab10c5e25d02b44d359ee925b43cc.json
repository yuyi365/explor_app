{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    setUser,\n    user\n  } = _ref;\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [currentPassword, setCurrentPassword] = useState(user.password);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false);\n  const [updatePassword, setUpdatePassword] = useState(false);\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  };\n\n  const updatePasswordFunction = () => {\n    setUpdatePassword(false);\n    const formData = {\n      currentPassword: currentPassword,\n      password: newPassword\n    };\n    fetch(`/updatepassword/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => console.log(data));\n  }; // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        component: Paper,\n        elevation: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 10,\n            mx: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            color: \"primary\",\n            sx: {\n              mt: 6,\n              mb: 7,\n              fontFamily: \"Mochiy Pop P One\"\n            },\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                sx: {\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  width: \"75%\",\n                  margin: \"auto\"\n                },\n                children: [!updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    autoComplete: \"given-name\",\n                    name: \"firstname\",\n                    id: \"firstName\",\n                    label: \"First name\",\n                    variant: \"standard\",\n                    value: firstname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    autoComplete: \"given-name\",\n                    name: \"firstname\",\n                    id: \"firstName\",\n                    label: \"First name\",\n                    variant: \"standard\",\n                    value: firstname,\n                    onChange: e => setFirstname(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), !updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    disabled: true,\n                    autoComplete: \"family-name\",\n                    id: \"lastName\",\n                    label: \"Last Name\",\n                    name: \"lastname\",\n                    variant: \"standard\",\n                    value: lastname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    autoComplete: \"family-name\",\n                    id: \"lastName\",\n                    label: \"Last Name\",\n                    name: \"lastname\",\n                    variant: \"standard\",\n                    value: lastname,\n                    onChange: e => setLastname(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: !updateName ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => setUpdateName(true),\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"success\",\n                    onClick: updateNameFunction,\n                    startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                sx: {\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  mb: 2,\n                  width: \"75%\",\n                  margin: \"auto\"\n                },\n                children: [!updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sx: {\n                    mb: 3\n                  },\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: true,\n                    autoComplete: \"username\",\n                    id: \"username\",\n                    label: \"Username\",\n                    name: \"username\",\n                    variant: \"standard\",\n                    value: username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sx: {\n                    mb: 3\n                  },\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    autoComplete: \"username\",\n                    id: \"username\",\n                    label: \"Username\",\n                    name: \"username\",\n                    variant: \"standard\",\n                    value: username,\n                    onChange: e => setUsername(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: true,\n                    id: \"email\",\n                    label: \"Email Address\",\n                    name: \"email\",\n                    autoComplete: \"email\",\n                    variant: \"standard\",\n                    value: email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    id: \"email\",\n                    label: \"Email Address\",\n                    name: \"email\",\n                    autoComplete: \"email\",\n                    variant: \"standard\",\n                    value: email,\n                    onChange: e => setEmail(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => setUpdateUsernameEmail(true),\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"success\",\n                    onClick: updateUsernameEmailFunction,\n                    startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                sx: {\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  mb: 2,\n                  width: \"75%\",\n                  margin: \"auto\"\n                },\n                children: [!updatePassword ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sx: {\n                    mb: 2\n                  },\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: true,\n                    name: \"password\",\n                    label: \"Enter Current Password\",\n                    type: \"password\",\n                    id: \"password\",\n                    autoComplete: \"new-password\",\n                    variant: \"standard\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sx: {\n                    mb: 2\n                  },\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    name: \"password\",\n                    label: \"Enter Current Password\",\n                    type: \"password\",\n                    id: \"password\",\n                    autoComplete: \"new-password\",\n                    variant: \"standard\",\n                    onChange: e => {\n                      setCurrentPassword(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), !updatePassword ? /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    disabled: true,\n                    id: \"standard-basic\",\n                    label: \"New Password\",\n                    variant: \"standard\",\n                    type: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    id: \"standard-basic\",\n                    label: \"New Password\",\n                    variant: \"standard\",\n                    type: \"password\",\n                    value: newPassword,\n                    onChange: e => {\n                      setNewPassword(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 2,\n                  children: !updatePassword ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => setUpdatePassword(true),\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    color: \"success\",\n                    onClick: updatePasswordFunction,\n                    startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 36\n                    }, this),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"VqBsxY0DPCt1tk/QRPsjnRH8amc=\");\n\n_c = Profile;\nconst theme = createTheme();\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx"],"names":["React","useState","CssBaseline","TextField","Paper","Box","Grid","Typography","Button","createTheme","ThemeProvider","EditIcon","CheckCircleIcon","Profile","setUser","user","firstname","setFirstname","first_name","lastname","setLastname","last_name","email","setEmail","username","setUsername","currentPassword","setCurrentPassword","password","newPassword","setNewPassword","updateName","setUpdateName","updateUsernameEmail","setUpdateUsernameEmail","updatePassword","setUpdatePassword","updateNameFunction","formData","fetch","id","method","headers","body","JSON","stringify","then","res","json","data","updateUsernameEmailFunction","updatePasswordFunction","console","log","theme","xs","md","my","mx","display","flexDirection","alignItems","height","mt","mb","fontFamily","justifyContent","border","borderColor","borderRadius","p","width","margin","e","target","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nconst Profile = ({ setUser, user }) => {\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [currentPassword, setCurrentPassword] = useState(user.password);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false);\n  const [updatePassword, setUpdatePassword] = useState(false);\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  const updatePasswordFunction = () => {\n    setUpdatePassword(false);\n    const formData = {\n      currentPassword: currentPassword,\n      password: newPassword,\n    };\n\n    fetch(`/updatepassword/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => console.log(data));\n  };\n  // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" spacing={{ xs: 2, md: 3 }}>\n        <CssBaseline />\n\n        <Grid item xs={12} component={Paper} elevation={6}>\n          <Box\n            sx={{\n              my: 10,\n              mx: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              color=\"primary\"\n              sx={{ mt: 6, mb: 7, fontFamily: \"Mochiy Pop P One\" }}\n            >\n              My Profile\n            </Typography>\n\n            <Box component=\"form\" noValidate>\n              <Grid container spacing={2}>\n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                    border: 1,\n                    borderColor: \"primary.main\",\n                    borderRadius: 5,\n                    p: 2,\n                    width: \"75%\",\n                    margin: \"auto\",\n                  }}\n                >\n                  {!updateName ? (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        disabled\n                        autoComplete=\"given-name\"\n                        name=\"firstname\"\n                        id=\"firstName\"\n                        label=\"First name\"\n                        variant=\"standard\"\n                        value={firstname}\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        autoComplete=\"given-name\"\n                        name=\"firstname\"\n                        id=\"firstName\"\n                        label=\"First name\"\n                        variant=\"standard\"\n                        value={firstname}\n                        onChange={(e) => setFirstname(e.target.value)}\n                      />\n                    </Grid>\n                  )}\n\n                  {!updateName ? (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        disabled\n                        autoComplete=\"family-name\"\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        name=\"lastname\"\n                        variant=\"standard\"\n                        value={lastname}\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        autoComplete=\"family-name\"\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        name=\"lastname\"\n                        variant=\"standard\"\n                        value={lastname}\n                        onChange={(e) => setLastname(e.target.value)}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12} sm={2}>\n                    {!updateName ? (\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => setUpdateName(true)}\n                        startIcon={<EditIcon />}\n                      >\n                        Edit\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"success\"\n                        onClick={updateNameFunction}\n                        startIcon={<CheckCircleIcon />}\n                      >\n                        Save\n                      </Button>\n                    )}\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                    border: 1,\n                    borderColor: \"primary.main\",\n                    borderRadius: 5,\n                    p: 2,\n                    mb: 2,\n                    width: \"75%\",\n                    margin: \"auto\",\n                  }}\n                >\n                  {!updateUsernameEmail ? (\n                    <Grid item xs={12} sx={{ mb: 3 }} sm={4}>\n                      <TextField\n                        fullWidth\n                        disabled\n                        autoComplete=\"username\"\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        variant=\"standard\"\n                        value={username}\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sx={{ mb: 3 }} sm={4}>\n                      <TextField\n                        fullWidth\n                        autoComplete=\"username\"\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        variant=\"standard\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                      />\n                    </Grid>\n                  )}\n\n                  {!updateUsernameEmail ? (\n                    <Grid item xs={12} sm={4}>\n                      <TextField\n                        fullWidth\n                        disabled\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        variant=\"standard\"\n                        value={email}\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sm={4}>\n                      <TextField\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        variant=\"standard\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12} sm={2}>\n                    {!updateUsernameEmail ? (\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => setUpdateUsernameEmail(true)}\n                        startIcon={<EditIcon />}\n                      >\n                        Edit\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"success\"\n                        onClick={updateUsernameEmailFunction}\n                        startIcon={<CheckCircleIcon />}\n                      >\n                        Save\n                      </Button>\n                    )}\n                  </Grid>\n                </Grid>\n\n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    alignItems: \"center\",\n                    border: 1,\n                    borderColor: \"primary.main\",\n                    borderRadius: 5,\n                    p: 2,\n                    mb: 2,\n                    width: \"75%\",\n                    margin: \"auto\",\n                  }}\n                >\n                  {!updatePassword ? (\n                    <Grid item xs={12} sx={{ mb: 2 }} sm={2}>\n                      <TextField\n                        fullWidth\n                        disabled\n                        name=\"password\"\n                        label=\"Enter Current Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        variant=\"standard\"\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sx={{ mb: 2 }} sm={2}>\n                      <TextField\n                        fullWidth\n                        name=\"password\"\n                        label=\"Enter Current Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"new-password\"\n                        variant=\"standard\"\n                        onChange={(e) => {\n                          setCurrentPassword(e.target.value);\n                        }}\n                      />\n                    </Grid>\n                  )}\n\n                  {!updatePassword ? (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        fullWidth\n                        disabled\n                        id=\"standard-basic\"\n                        label=\"New Password\"\n                        variant=\"standard\"\n                        type=\"password\"\n                      />\n                    </Grid>\n                  ) : (\n                    <Grid item xs={12} sm={2}>\n                      <TextField\n                        fullWidth\n                        id=\"standard-basic\"\n                        label=\"New Password\"\n                        variant=\"standard\"\n                        type=\"password\"\n                        value={newPassword}\n                        onChange={(e) => {\n                          setNewPassword(e.target.value);\n                        }}\n                      />\n                    </Grid>\n                  )}\n\n                  <Grid item xs={12} sm={2}>\n                    {!updatePassword ? (\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => setUpdatePassword(true)}\n                        startIcon={<EditIcon />}\n                      >\n                        Edit\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"success\"\n                        onClick={updatePasswordFunction}\n                        startIcon={<CheckCircleIcon />}\n                      >\n                        Save\n                      </Button>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nconst theme = createTheme();\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}