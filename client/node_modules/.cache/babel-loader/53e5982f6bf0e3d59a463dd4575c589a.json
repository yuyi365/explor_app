{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    setUser,\n    user\n  } = _ref;\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [currentPassword, setCurrentPassword] = useState(user.password);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false);\n  const [updatePassword, setUpdatePassword] = useState(false);\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  };\n\n  const updatePasswordFunction = () => {\n    setUpdatePassword(false);\n    const formData = {\n      currentPassword: currentPassword,\n      password: newPassword\n    };\n    fetch(`/updatepassword/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => console.log(data));\n  }; // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        component: Paper,\n        elevation: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 10,\n            mx: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"100vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            color: \"primary\",\n            sx: {\n              mt: 6,\n              mb: 7,\n              fontFamily: \"Mochiy Pop P One\"\n            },\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                border: 1,\n                borderColor: \"primary.main\",\n                borderRadius: 5,\n                p: 2,\n                width: \"75%\",\n                margin: \"auto\"\n              },\n              children: [!updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  autoComplete: \"given-name\",\n                  name: \"firstname\",\n                  id: \"firstName\",\n                  label: \"First name\",\n                  variant: \"standard\",\n                  value: firstname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"given-name\",\n                  name: \"firstname\",\n                  id: \"firstName\",\n                  label: \"First name\",\n                  variant: \"standard\",\n                  value: firstname,\n                  onChange: e => setFirstname(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), !updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  autoComplete: \"family-name\",\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastname\",\n                  variant: \"standard\",\n                  value: lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  autoComplete: \"family-name\",\n                  id: \"lastName\",\n                  label: \"Last Name\",\n                  name: \"lastname\",\n                  variant: \"standard\",\n                  value: lastname,\n                  onChange: e => setLastname(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 1,\n                children: !updateName ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setUpdateName(true),\n                  startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"success\",\n                  onClick: updateNameFunction,\n                  startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                border: 1,\n                borderColor: \"primary.main\",\n                borderRadius: 5,\n                p: 2,\n                width: \"75%\",\n                margin: \"auto\"\n              },\n              children: [!updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sx: {\n                  mb: 3\n                },\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  disabled: true,\n                  autoComplete: \"username\",\n                  id: \"username\",\n                  label: \"Username\",\n                  name: \"username\",\n                  variant: \"standard\",\n                  value: username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sx: {\n                  mb: 3\n                },\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  autoComplete: \"username\",\n                  id: \"username\",\n                  label: \"Username\",\n                  name: \"username\",\n                  variant: \"standard\",\n                  value: username,\n                  onChange: e => setUsername(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  disabled: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  variant: \"standard\",\n                  value: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"email\",\n                  label: \"Email Address\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  variant: \"standard\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 1,\n                children: !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setUpdateUsernameEmail(true),\n                  startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"success\",\n                  onClick: updateUsernameEmailFunction,\n                  startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                border: 1,\n                borderColor: \"primary.main\",\n                borderRadius: 5,\n                p: 2,\n                width: \"75%\",\n                margin: \"auto\"\n              },\n              children: [!updatePassword ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sx: {\n                  mb: 2\n                },\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  disabled: true,\n                  name: \"password\",\n                  label: \"Enter Current Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"new-password\",\n                  variant: \"standard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sx: {\n                  mb: 2\n                },\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  name: \"password\",\n                  label: \"Enter Current Password\",\n                  type: \"password\",\n                  id: \"password\",\n                  autoComplete: \"new-password\",\n                  variant: \"standard\",\n                  onChange: e => {\n                    setCurrentPassword(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), !updatePassword ? /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  disabled: true,\n                  id: \"standard-basic\",\n                  label: \"New Password\",\n                  variant: \"standard\",\n                  type: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  id: \"standard-basic\",\n                  label: \"New Password\",\n                  variant: \"standard\",\n                  type: \"password\",\n                  value: newPassword,\n                  onChange: e => {\n                    setNewPassword(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 1,\n                children: !updatePassword ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => setUpdatePassword(true),\n                  startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"success\",\n                  onClick: updatePasswordFunction,\n                  startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"VqBsxY0DPCt1tk/QRPsjnRH8amc=\");\n\n_c = Profile;\nconst theme = createTheme();\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx"],"names":["React","useState","CssBaseline","TextField","Paper","Box","Grid","Typography","Button","createTheme","ThemeProvider","EditIcon","CheckCircleIcon","Profile","setUser","user","firstname","setFirstname","first_name","lastname","setLastname","last_name","email","setEmail","username","setUsername","currentPassword","setCurrentPassword","password","newPassword","setNewPassword","updateName","setUpdateName","updateUsernameEmail","setUpdateUsernameEmail","updatePassword","setUpdatePassword","updateNameFunction","formData","fetch","id","method","headers","body","JSON","stringify","then","res","json","data","updateUsernameEmailFunction","updatePasswordFunction","console","log","theme","my","mx","display","flexDirection","alignItems","height","mt","mb","fontFamily","justifyContent","border","borderColor","borderRadius","p","width","margin","e","target","value"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nconst Profile = ({ setUser, user }) => {\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [currentPassword, setCurrentPassword] = useState(user.password);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false);\n  const [updatePassword, setUpdatePassword] = useState(false);\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  const updatePasswordFunction = () => {\n    setUpdatePassword(false);\n    const formData = {\n      currentPassword: currentPassword,\n      password: newPassword,\n    };\n\n    fetch(`/updatepassword/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => console.log(data));\n  };\n  // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\">\n        <CssBaseline />\n\n        <Grid item xs={12} component={Paper} elevation={6}>\n          <Box\n            sx={{\n              my: 10,\n              mx: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              height: \"100vh\",\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              color=\"primary\"\n              sx={{ mt: 6, mb: 7, fontFamily: \"Mochiy Pop P One\" }}\n            >\n              My Profile\n            </Typography>\n\n            <Grid container spacing={2}>\n              <Grid\n                container\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  width: \"75%\",\n                  margin: \"auto\",\n                }}\n              >\n                {!updateName ? (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      disabled\n                      autoComplete=\"given-name\"\n                      name=\"firstname\"\n                      id=\"firstName\"\n                      label=\"First name\"\n                      variant=\"standard\"\n                      value={firstname}\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      autoComplete=\"given-name\"\n                      name=\"firstname\"\n                      id=\"firstName\"\n                      label=\"First name\"\n                      variant=\"standard\"\n                      value={firstname}\n                      onChange={(e) => setFirstname(e.target.value)}\n                    />\n                  </Grid>\n                )}\n\n                {!updateName ? (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      disabled\n                      autoComplete=\"family-name\"\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastname\"\n                      variant=\"standard\"\n                      value={lastname}\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      autoComplete=\"family-name\"\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastname\"\n                      variant=\"standard\"\n                      value={lastname}\n                      onChange={(e) => setLastname(e.target.value)}\n                    />\n                  </Grid>\n                )}\n\n                <Grid item xs={12} sm={1}>\n                  {!updateName ? (\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => setUpdateName(true)}\n                      startIcon={<EditIcon />}\n                    >\n                      Edit\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"success\"\n                      onClick={updateNameFunction}\n                      startIcon={<CheckCircleIcon />}\n                    >\n                      Save\n                    </Button>\n                  )}\n                </Grid>\n              </Grid>\n\n              <Grid\n                container\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  width: \"75%\",\n                  margin: \"auto\",\n                }}\n              >\n                {!updateUsernameEmail ? (\n                  <Grid item xs={12} sx={{ mb: 3 }} sm={4}>\n                    <TextField\n                      fullWidth\n                      disabled\n                      autoComplete=\"username\"\n                      id=\"username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      variant=\"standard\"\n                      value={username}\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sx={{ mb: 3 }} sm={4}>\n                    <TextField\n                      fullWidth\n                      autoComplete=\"username\"\n                      id=\"username\"\n                      label=\"Username\"\n                      name=\"username\"\n                      variant=\"standard\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                  </Grid>\n                )}\n\n                {!updateUsernameEmail ? (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      disabled\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      variant=\"standard\"\n                      value={email}\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      variant=\"standard\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </Grid>\n                )}\n\n                <Grid item xs={12} sm={1}>\n                  {!updateUsernameEmail ? (\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => setUpdateUsernameEmail(true)}\n                      startIcon={<EditIcon />}\n                    >\n                      Edit\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"success\"\n                      onClick={updateUsernameEmailFunction}\n                      startIcon={<CheckCircleIcon />}\n                    >\n                      Save\n                    </Button>\n                  )}\n                </Grid>\n              </Grid>\n\n              <Grid\n                container\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  alignItems: \"center\",\n                  border: 1,\n                  borderColor: \"primary.main\",\n                  borderRadius: 5,\n                  p: 2,\n                  width: \"75%\",\n                  margin: \"auto\",\n                }}\n              >\n                {!updatePassword ? (\n                  <Grid item xs={12} sx={{ mb: 2 }} sm={4}>\n                    <TextField\n                      fullWidth\n                      disabled\n                      name=\"password\"\n                      label=\"Enter Current Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"new-password\"\n                      variant=\"standard\"\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sx={{ mb: 2 }} sm={4}>\n                    <TextField\n                      fullWidth\n                      name=\"password\"\n                      label=\"Enter Current Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"new-password\"\n                      variant=\"standard\"\n                      onChange={(e) => {\n                        setCurrentPassword(e.target.value);\n                      }}\n                    />\n                  </Grid>\n                )}\n\n                {!updatePassword ? (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      disabled\n                      id=\"standard-basic\"\n                      label=\"New Password\"\n                      variant=\"standard\"\n                      type=\"password\"\n                    />\n                  </Grid>\n                ) : (\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      id=\"standard-basic\"\n                      label=\"New Password\"\n                      variant=\"standard\"\n                      type=\"password\"\n                      value={newPassword}\n                      onChange={(e) => {\n                        setNewPassword(e.target.value);\n                      }}\n                    />\n                  </Grid>\n                )}\n\n                <Grid item xs={12} sm={1}>\n                  {!updatePassword ? (\n                    <Button\n                      variant=\"outlined\"\n                      onClick={() => setUpdatePassword(true)}\n                      startIcon={<EditIcon />}\n                    >\n                      Edit\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"success\"\n                      onClick={updatePasswordFunction}\n                      startIcon={<CheckCircleIcon />}\n                    >\n                      Save\n                    </Button>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nconst theme = createTheme();\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}