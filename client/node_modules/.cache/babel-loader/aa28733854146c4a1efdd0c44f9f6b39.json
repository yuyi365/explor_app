{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    setUser,\n    user\n  } = _ref;\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false); // const [updatePassword, setUpdatePassword] = useState(false);\n  // const [currentPassword, setCurrentPassword] = useState(user.password);\n  // const [newPassword, setNewPassword] = useState(\"\");\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email\n    };\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      res.json();\n    }).then(data => setUser(data));\n  }; // future development with password updates\n  // const updatePasswordFunction = () => {\n  //   setUpdatePassword(false);\n  //   const formData = {\n  //     currentPassword: currentPassword,\n  //     password: newPassword,\n  //   };\n  //   fetch(`/updatepassword/${user.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(formData),\n  //   })\n  //     .then((res) => {\n  //       res.json();\n  //     })\n  //     .then((data) => console.log(data));\n  // };\n  // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      rowSpacing: 55,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        elevation: 6,\n        sx: {\n          my: 10,\n          mx: 10,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          height: \"100vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          color: \"primary\",\n          sx: {\n            mt: 6,\n            mb: 7,\n            fontFamily: \"Mochiy Pop P One\"\n          },\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            border: 1,\n            borderColor: \"primary.main\",\n            borderRadius: 5,\n            p: 2,\n            width: \"75%\",\n            margin: \"auto\"\n          },\n          children: [!updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              autoComplete: \"given-name\",\n              name: \"firstname\",\n              id: \"firstName\",\n              label: \"First name\",\n              variant: \"standard\",\n              value: firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"given-name\",\n              name: \"firstname\",\n              id: \"firstName\",\n              label: \"First name\",\n              variant: \"standard\",\n              value: firstname,\n              onChange: e => setFirstname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), !updateName ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              autoComplete: \"family-name\",\n              id: \"lastName\",\n              label: \"Last Name\",\n              name: \"lastname\",\n              variant: \"standard\",\n              value: lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"family-name\",\n              id: \"lastName\",\n              label: \"Last Name\",\n              name: \"lastname\",\n              variant: \"standard\",\n              value: lastname,\n              onChange: e => setLastname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 1,\n            children: !updateName ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => setUpdateName(true),\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 30\n              }, this),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"success\",\n              onClick: updateNameFunction,\n              startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 30\n              }, this),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            border: 1,\n            borderColor: \"primary.main\",\n            borderRadius: 5,\n            p: 2,\n            width: \"75%\",\n            margin: \"auto\"\n          },\n          children: [!updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              disabled: true,\n              autoComplete: \"username\",\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\",\n              variant: \"standard\",\n              value: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              autoComplete: \"username\",\n              id: \"username\",\n              label: \"Username\",\n              name: \"username\",\n              variant: \"standard\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              disabled: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              variant: \"standard\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              variant: \"standard\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 1,\n            children: !updateUsernameEmail ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => setUpdateUsernameEmail(true),\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 30\n              }, this),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"success\",\n              onClick: updateUsernameEmailFunction,\n              startIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 30\n              }, this),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"IxC/eDhq/Ctgb1NMbVO8La7iSRc=\");\n\n_c = Profile;\nconst theme = createTheme();\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/yuyili/Development/travel-app-explor/client/src/components/Profile/Profile.jsx"],"names":["React","useState","CssBaseline","TextField","Grid","Typography","Button","createTheme","ThemeProvider","EditIcon","CheckCircleIcon","Profile","setUser","user","firstname","setFirstname","first_name","lastname","setLastname","last_name","email","setEmail","username","setUsername","updateName","setUpdateName","updateUsernameEmail","setUpdateUsernameEmail","updateNameFunction","formData","fetch","id","method","headers","body","JSON","stringify","then","res","json","data","updateUsernameEmailFunction","theme","my","mx","display","flexDirection","alignItems","height","mt","mb","fontFamily","justifyContent","border","borderColor","borderRadius","p","width","margin","e","target","value"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,sBAA3C;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;;AAEA,MAAMC,OAAO,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAsB;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACY,IAAI,CAACG,UAAN,CAA1C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAACY,IAAI,CAACM,SAAN,CAAxC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAACY,IAAI,CAACO,KAAN,CAAlC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAACY,IAAI,CAACS,QAAN,CAAxC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACyB,mBAAD,EAAsBC,sBAAtB,IAAgD1B,QAAQ,CAAC,KAAD,CAA9D,CANqC,CAOrC;AACA;AACA;;AAEA,QAAM2B,kBAAkB,GAAG,MAAM;AAC/BH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,UAAMI,QAAQ,GAAG;AACfb,MAAAA,UAAU,EAAEF,SADG;AAEfK,MAAAA,SAAS,EAAEF;AAFI,KAAjB;AAKAa,IAAAA,KAAK,CAAE,UAASjB,IAAI,CAACkB,EAAG,EAAnB,EAAsB;AACzBC,MAAAA,MAAM,EAAE,OADiB;AAEzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AALmB,KAAtB,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACC,IAAJ;AACD,KATH,EAUGF,IAVH,CAUSG,IAAD,IAAU5B,OAAO,CAAC4B,IAAD,CAVzB;AAWD,GAlBD;;AAoBA,QAAMC,2BAA2B,GAAG,MAAM;AACxCd,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACA,UAAME,QAAQ,GAAG;AACfP,MAAAA,QAAQ,EAAEA,QADK;AAEfF,MAAAA,KAAK,EAAEA;AAFQ,KAAjB;AAKAU,IAAAA,KAAK,CAAE,UAASjB,IAAI,CAACkB,EAAG,EAAnB,EAAsB;AACzBC,MAAAA,MAAM,EAAE,OADiB;AAEzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AALmB,KAAtB,CAAL,CAOGQ,IAPH,CAOSC,GAAD,IAAS;AACbA,MAAAA,GAAG,CAACC,IAAJ;AACD,KATH,EAUGF,IAVH,CAUSG,IAAD,IAAU5B,OAAO,CAAC4B,IAAD,CAVzB;AAWD,GAlBD,CA/BqC,CAmDrC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,MAA1B;AAAiC,MAAA,UAAU,EAAE,EAA7C;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,EAAE,EAAE,EAFN;AAGE,QAAA,SAAS,EAAE,CAHb;AAIE,QAAA,EAAE,EAAE;AACFC,UAAAA,EAAE,EAAE,EADF;AAEFC,UAAAA,EAAE,EAAE,EAFF;AAGFC,UAAAA,OAAO,EAAE,MAHP;AAIFC,UAAAA,aAAa,EAAE,QAJb;AAKFC,UAAAA,UAAU,EAAE,QALV;AAMFC,UAAAA,MAAM,EAAE;AANN,SAJN;AAAA,gCAaE,QAAC,UAAD;AACE,UAAA,SAAS,EAAC,IADZ;AAEE,UAAA,OAAO,EAAC,IAFV;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE,CAAb;AAAgBC,YAAAA,UAAU,EAAE;AAA5B,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAsBE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE;AACFN,YAAAA,OAAO,EAAE,MADP;AAEFO,YAAAA,cAAc,EAAE,cAFd;AAGFL,YAAAA,UAAU,EAAE,QAHV;AAIFM,YAAAA,MAAM,EAAE,CAJN;AAKFC,YAAAA,WAAW,EAAE,cALX;AAMFC,YAAAA,YAAY,EAAE,CANZ;AAOFC,YAAAA,CAAC,EAAE,CAPD;AAQFC,YAAAA,KAAK,EAAE,KARL;AASFC,YAAAA,MAAM,EAAE;AATN,WAFN;AAAA,qBAcG,CAAClC,UAAD,gBACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,YAAY,EAAC,YAFf;AAGE,cAAA,IAAI,EAAC,WAHP;AAIE,cAAA,EAAE,EAAC,WAJL;AAKE,cAAA,KAAK,EAAC,YALR;AAME,cAAA,OAAO,EAAC,UANV;AAOE,cAAA,KAAK,EAAEV;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,gBAaC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,YAAY,EAAC,YADf;AAEE,cAAA,IAAI,EAAC,WAFP;AAGE,cAAA,EAAE,EAAC,WAHL;AAIE,cAAA,KAAK,EAAC,YAJR;AAKE,cAAA,OAAO,EAAC,UALV;AAME,cAAA,KAAK,EAAEA,SANT;AAOE,cAAA,QAAQ,EAAG6C,CAAD,IAAO5C,YAAY,CAAC4C,CAAC,CAACC,MAAF,CAASC,KAAV;AAP/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3BJ,EAwCG,CAACrC,UAAD,gBACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,YAAY,EAAC,aAFf;AAGE,cAAA,EAAE,EAAC,UAHL;AAIE,cAAA,KAAK,EAAC,WAJR;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,OAAO,EAAC,UANV;AAOE,cAAA,KAAK,EAAEP;AAPT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,gBAaC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,YAAY,EAAC,aADf;AAEE,cAAA,EAAE,EAAC,UAFL;AAGE,cAAA,KAAK,EAAC,WAHR;AAIE,cAAA,IAAI,EAAC,UAJP;AAKE,cAAA,OAAO,EAAC,UALV;AAME,cAAA,KAAK,EAAEA,QANT;AAOE,cAAA,QAAQ,EAAG0C,CAAD,IAAOzC,WAAW,CAACyC,CAAC,CAACC,MAAF,CAASC,KAAV;AAP9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAkEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,sBACG,CAACrC,UAAD,gBACC,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAF9B;AAGE,cAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBASC,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAEG,kBAHX;AAIE,cAAA,SAAS,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,sBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAlEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA8GE,QAAC,IAAD;AACE,UAAA,IAAI,MADN;AAEE,UAAA,EAAE,EAAE;AACFiB,YAAAA,OAAO,EAAE,MADP;AAEFO,YAAAA,cAAc,EAAE,cAFd;AAGFL,YAAAA,UAAU,EAAE,QAHV;AAIFM,YAAAA,MAAM,EAAE,CAJN;AAKFC,YAAAA,WAAW,EAAE,cALX;AAMFC,YAAAA,YAAY,EAAE,CANZ;AAOFC,YAAAA,CAAC,EAAE,CAPD;AAQFC,YAAAA,KAAK,EAAE,KARL;AASFC,YAAAA,MAAM,EAAE;AATN,WAFN;AAAA,qBAcG,CAAChC,mBAAD,gBACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,YAAY,EAAC,UAHf;AAIE,cAAA,EAAE,EAAC,UAJL;AAKE,cAAA,KAAK,EAAC,UALR;AAME,cAAA,IAAI,EAAC,UANP;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,KAAK,EAAEJ;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,gBAcC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,YAAY,EAAC,UAFf;AAGE,cAAA,EAAE,EAAC,UAHL;AAIE,cAAA,KAAK,EAAC,UAJR;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,OAAO,EAAC,UANV;AAOE,cAAA,KAAK,EAAEA,QAPT;AAQE,cAAA,QAAQ,EAAGqC,CAAD,IAAOpC,WAAW,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV;AAR9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5BJ,EA0CG,CAACnC,mBAAD,gBACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,EAAE,EAAC,OAHL;AAIE,cAAA,KAAK,EAAC,eAJR;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,YAAY,EAAC,OANf;AAOE,cAAA,OAAO,EAAC,UAPV;AAQE,cAAA,KAAK,EAAEN;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,gBAcC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,EAAE,EAAC,OAFL;AAGE,cAAA,KAAK,EAAC,eAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,YAAY,EAAC,OALf;AAME,cAAA,OAAO,EAAC,UANV;AAOE,cAAA,KAAK,EAAEA,KAPT;AAQE,cAAA,QAAQ,EAAGuC,CAAD,IAAOtC,QAAQ,CAACsC,CAAC,CAACC,MAAF,CAASC,KAAV;AAR3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxDJ,eAsEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAAA,sBACG,CAACnC,mBAAD,gBACC,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,OAAO,EAAE,MAAMC,sBAAsB,CAAC,IAAD,CAFvC;AAGE,cAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBASC,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAEc,2BAHX;AAIE,cAAA,SAAS,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,sBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9GF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8SD,CA3XD;;GAAM9B,O;;KAAAA,O;AA6XN,MAAM+B,KAAK,GAAGnC,WAAW,EAAzB;AAEA,eAAeI,OAAf","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nconst Profile = ({ setUser, user }) => {\n  const [firstname, setFirstname] = useState(user.first_name);\n  const [lastname, setLastname] = useState(user.last_name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [updateName, setUpdateName] = useState(false);\n  const [updateUsernameEmail, setUpdateUsernameEmail] = useState(false);\n  // const [updatePassword, setUpdatePassword] = useState(false);\n  // const [currentPassword, setCurrentPassword] = useState(user.password);\n  // const [newPassword, setNewPassword] = useState(\"\");\n\n  const updateNameFunction = () => {\n    setUpdateName(false);\n    const formData = {\n      first_name: firstname,\n      last_name: lastname,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  const updateUsernameEmailFunction = () => {\n    setUpdateUsernameEmail(false);\n    const formData = {\n      username: username,\n      email: email,\n    };\n\n    fetch(`/users/${user.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((data) => setUser(data));\n  };\n\n  // future development with password updates\n  // const updatePasswordFunction = () => {\n  //   setUpdatePassword(false);\n  //   const formData = {\n  //     currentPassword: currentPassword,\n  //     password: newPassword,\n  //   };\n\n  //   fetch(`/updatepassword/${user.id}`, {\n  //     method: \"PATCH\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(formData),\n  //   })\n  //     .then((res) => {\n  //       res.json();\n  //     })\n  //     .then((data) => console.log(data));\n  // };\n  // }\n  //   alert(\n  //     \"Your current password does not match what is on file. Please try again!\"\n  //   );\n  // }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" rowSpacing={55}>\n        <CssBaseline />\n\n        <Grid\n          item\n          xs={12}\n          elevation={6}\n          sx={{\n            my: 10,\n            mx: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            height: \"100vh\",\n          }}\n        >\n          <Typography\n            component=\"h1\"\n            variant=\"h5\"\n            color=\"primary\"\n            sx={{ mt: 6, mb: 7, fontFamily: \"Mochiy Pop P One\" }}\n          >\n            My Profile\n          </Typography>\n\n          <Grid\n            item\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n              border: 1,\n              borderColor: \"primary.main\",\n              borderRadius: 5,\n              p: 2,\n              width: \"75%\",\n              margin: \"auto\",\n            }}\n          >\n            {!updateName ? (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  disabled\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstName\"\n                  label=\"First name\"\n                  variant=\"standard\"\n                  value={firstname}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstName\"\n                  label=\"First name\"\n                  variant=\"standard\"\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n            )}\n\n            {!updateName ? (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  disabled\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  variant=\"standard\"\n                  value={lastname}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  variant=\"standard\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n            )}\n\n            <Grid item xs={12} sm={1}>\n              {!updateName ? (\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => setUpdateName(true)}\n                  startIcon={<EditIcon />}\n                >\n                  Edit\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"success\"\n                  onClick={updateNameFunction}\n                  startIcon={<CheckCircleIcon />}\n                >\n                  Save\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n              border: 1,\n              borderColor: \"primary.main\",\n              borderRadius: 5,\n              p: 2,\n              width: \"75%\",\n              margin: \"auto\",\n            }}\n          >\n            {!updateUsernameEmail ? (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  disabled\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  variant=\"standard\"\n                  value={username}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  variant=\"standard\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n            )}\n\n            {!updateUsernameEmail ? (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  disabled\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"standard\"\n                  value={email}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"standard\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Grid>\n            )}\n\n            <Grid item xs={12} sm={1}>\n              {!updateUsernameEmail ? (\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => setUpdateUsernameEmail(true)}\n                  startIcon={<EditIcon />}\n                >\n                  Edit\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"success\"\n                  onClick={updateUsernameEmailFunction}\n                  startIcon={<CheckCircleIcon />}\n                >\n                  Save\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n\n          {/* <Grid\n            item\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n              border: 1,\n              borderColor: \"primary.main\",\n              borderRadius: 5,\n              p: 2,\n              width: \"75%\",\n              margin: \"auto\",\n            }}\n          >\n            {!updatePassword ? (\n              <Grid item xs={12} sx={{ mb: 2 }} sm={4}>\n                <TextField\n                  fullWidth\n                  disabled\n                  name=\"password\"\n                  label=\"Enter Current Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  variant=\"standard\"\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sx={{ mb: 2 }} sm={4}>\n                <TextField\n                  fullWidth\n                  name=\"password\"\n                  label=\"Enter Current Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  variant=\"standard\"\n                  onChange={(e) => {\n                    setCurrentPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            )}\n\n            {!updatePassword ? (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  disabled\n                  id=\"standard-basic\"\n                  label=\"New Password\"\n                  variant=\"standard\"\n                  type=\"password\"\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} sm={4}>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  label=\"New Password\"\n                  variant=\"standard\"\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => {\n                    setNewPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            )}\n\n            <Grid item xs={12} sm={1}>\n              {!updatePassword ? (\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => setUpdatePassword(true)}\n                  startIcon={<EditIcon />}\n                >\n                  Edit\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"success\"\n                  onClick={updatePasswordFunction}\n                  startIcon={<CheckCircleIcon />}\n                >\n                  Save\n                </Button>\n              )}\n            </Grid> */}\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nconst theme = createTheme();\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}